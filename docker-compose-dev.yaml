version: '3.9'
services:
  goetia:
    image: goetia:1.0
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "50051:50051"
    env_file:
      - .env
    depends_on:
        - postgres
        - redis
        - jaeger
    networks:
      - todos
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/
    networks:
        - todos
  redis:
      image: redis:latest
      ports:
          - "6379:6379"
      volumes:
        - redis:/data
        - redis-config:/usr/local/etc/redis/redis.conf
      command:
        - redis-server
      networks:
          - todos
  redis-commander:
      image: rediscommander/redis-commander:latest
      ports:
          - "8081:8081"
      environment:
          - REDIS_HOSTS=local:redis:6379
          - HTTP_USER=root
          - HTTP_PASSWORD=root
      depends_on:
        - redis
      networks:
          - todos
  grafana:
    image: grafana/grafana:9.3.0
    ports:
      - '3000:3000'
    depends_on:
      - jaeger
    networks:
      - todos
    volumes:
        - grafana-data:/var/lib/grafana
        - ./provisioning:/etc/grafana/provisioning
  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
        - todos
volumes:
    postgres-data:
    redis:
    redis-config:
    grafana-data:
networks:
    todos:
        driver: bridge