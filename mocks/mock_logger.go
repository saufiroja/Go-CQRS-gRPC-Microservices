// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/saufiroja/cqrs/pkg/logger (interfaces: ILogger)
//
// Generated by this command:
//
//	mockgen -destination ../../mocks/mock_logger.go -package mocks github.com/saufiroja/cqrs/pkg/logger ILogger
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	logrus "github.com/sirupsen/logrus"
	gomock "go.uber.org/mock/gomock"
)

// MockILogger is a mock of ILogger interface.
type MockILogger struct {
	ctrl     *gomock.Controller
	recorder *MockILoggerMockRecorder
}

// MockILoggerMockRecorder is the mock recorder for MockILogger.
type MockILoggerMockRecorder struct {
	mock *MockILogger
}

// NewMockILogger creates a new mock instance.
func NewMockILogger(ctrl *gomock.Controller) *MockILogger {
	mock := &MockILogger{ctrl: ctrl}
	mock.recorder = &MockILoggerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockILogger) EXPECT() *MockILoggerMockRecorder {
	return m.recorder
}

// StartLogger mocks base method.
func (m *MockILogger) StartLogger(arg0, arg1 string) *logrus.Entry {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartLogger", arg0, arg1)
	ret0, _ := ret[0].(*logrus.Entry)
	return ret0
}

// StartLogger indicates an expected call of StartLogger.
func (mr *MockILoggerMockRecorder) StartLogger(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartLogger", reflect.TypeOf((*MockILogger)(nil).StartLogger), arg0, arg1)
}
